[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "diskimage"
dynamic = ["version"]
description = "A comprehensive disk imaging and archiving tool"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "DiskImage Team"},
]
keywords = ["disk", "imaging", "backup", "forensics", "qemu"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Environment :: X11 Applications :: Qt",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10", 
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: System :: Archiving :: Backup",
    "Topic :: System :: Recovery Tools",
    "Topic :: Utilities",
]
requires-python = ">=3.9"
dependencies = [
    "PyQt6>=6.0.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-qt>=4.0.0",
    "mypy>=1.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=5.0.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
]
build = [
    "pyinstaller>=5.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/diskimage"
Repository = "https://github.com/yourusername/diskimage.git"
Documentation = "https://github.com/yourusername/diskimage/blob/main/README.md"
"Bug Tracker" = "https://github.com/yourusername/diskimage/issues"

[project.scripts]
diskimage = "main:main"
diskimage-cli = "cli.main:main"
diskimage-gui = "backend.app_entry:run_app"

[tool.setuptools]
packages = ["backend", "cli", "gui", "tests"]
include-package-data = true

[tool.setuptools.package-data]
"*" = ["*.json", "*.txt", "*.md"]

[tool.setuptools_scm]
write_to = "backend/_version.py"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = "tools.*"
ignore_errors = true

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | tools
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short", 
    "--strict-markers",
    "--disable-warnings"
]

[tool.bandit]
exclude_dirs = ["tests", "tools"]
skips = ["B101"]  # Skip assert_used test

[tool.coverage.run]
source = ["backend", "cli", "gui"]
omit = [
    "*/tests/*",
    "*/tools/*",
    "*/__pycache__/*",
    "*/build/*",
    "*/dist/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
